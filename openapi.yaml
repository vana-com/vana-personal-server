openapi: 3.0.3
info:
  title: Vana Personal-Server API
  version: "0.1.0"
  description: |
    A user-scoped compute service that executes permissioned operations
    (LLM inference, vector search, decryption, …) on private data.
    The contract is provider-agnostic, uses a clear /operations resource
    model, and defines a single streaming media-type (Server-Sent Events).

servers:
  - url: https://server.vana.com/api/v1

# ───────────────────────────────────────────────────────────────────────────
components:
  schemas:
    EthereumAddress:
      type: string
      description: EIP-55 checksum address, 20 bytes, 0x-prefixed.
      pattern: '^0x[a-fA-F0-9]{40}$'
      example: '0xf0ebD65BEaDacD191dc96D8EC69bbA4ABCf621D4'

    PublicKey:
      type: string
      description: Uncompressed secp256k1 public key, 128 hex characters.
      pattern: '^0x[a-fA-F0-9]{128}$'
      example: '0x04bcdf3e…'

    ResponseFormat:
      type: object
      description: OpenAI-compatible response format configuration
      properties:
        type:
          type: string
          enum: [text, json_object]
          default: text
          description: The format type for the response. Use 'json_object' to enforce JSON output.
          example: "json_object"

    CreateOperationRequest:
      type: object
      required: [app_signature, operation_request_json]
      properties:
        app_signature:
          type: string
          description: The signature over the operation_request_json
          example: "0x3cffa64411a02d4a257663848df70fd445f513edcbb78a2e94495af45987e2de6144efdafd37a3d2b95e4e535c4a84fbcfb088d8052d435c382e7ca9a5ac57801c"
        operation_request_json:
          type: string
          description: The request JSON which contains permission_id
          example: "{\"permission_id\": 1024}"
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
          description: Optional response format configuration for controlling LLM output format

    CreateOperationResponse:
      type: object
      required: [kind, id, created_at]
      properties:
        kind:
          type: string
          description: Resource type identifier
          example: "OperationCreated"
          default: "OperationCreated"
        id:
          type: string
          description: The operation ID for tracking the computation
          example: "test-prediction-id-123"
        created_at:
          type: string
          format: date-time
          description: The timestamp when the operation was created
          example: "2024-01-01T00:00:00Z"

    GetOperationResponse:
      type: object
      required: [kind, id, status]
      properties:
        kind:
          type: string
          description: Resource type identifier
          example: "OperationStatus"
          default: "OperationStatus"
        id:
          type: string
          description: The operation ID
          example: "test-prediction-id-123"
        status:
          type: string
          enum: [pending, running, succeeded, failed, cancelled]
          description: The status of the operation
        started_at:
          type: string
          format: date-time
          nullable: true
          description: Optional timestamp when the operation started
          example: "2024-01-01T00:00:00Z"
        finished_at:
          type: string
          format: date-time
          nullable: true
          description: Optional timestamp when the operation finished
          example: "2024-01-01T00:00:00Z"
        result:
          type: string
          nullable: true
          description: Optional result data if operation completed successfully

    PersonalServerModel:
      type: object
      required: [kind, address, public_key]
      properties:
        kind:
          type: string
          description: Resource type identifier
          example: "PersonalServer"
          default: "PersonalServer"
        address:
          $ref: '#/components/schemas/EthereumAddress'
        public_key:
          $ref: '#/components/schemas/PublicKey'

    IdentityResponseModel:
      type: object
      required: [kind, user_address, personal_server]
      properties:
        kind:
          type: string
          description: Resource type identifier
          example: "Identity"
          default: "Identity"
        user_address:
          $ref: '#/components/schemas/EthereumAddress'
        personal_server:
          $ref: '#/components/schemas/PersonalServerModel'

    ErrorResponse:
      type: object
      required: [kind, detail, error_code]
      properties:
        kind:
          type: string
          description: Resource type identifier
          example: "Error"
          default: "Error"
        detail:
          type: string
          description: Human-readable error message
          example: "Operation not found"
        error_code:
          type: string
          description: Machine-readable error code
          example: "NOT_FOUND_ERROR"
        field:
          type: string
          nullable: true
          description: Field name when error is related to a specific input field
          example: "permission_id"

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Validation error with error_code values: VALIDATION_ERROR, VALIDATION_ERROR_PERMISSION_ID, VALIDATION_ERROR_USER_ADDRESS, VALIDATION_ERROR_OPERATION_REQUEST_JSON"

    AuthenticationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Authentication error with error_code: AUTHENTICATION_ERROR"

    AuthorizationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Authorization error with error_code: AUTHORIZATION_ERROR"

    NotFoundErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Not found error with error_code: NOT_FOUND_ERROR"

    BlockchainErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Blockchain error with error_code: BLOCKCHAIN_ERROR"

    FileAccessErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "File access error with error_code: FILE_ACCESS_ERROR"

    ComputeErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Compute error with error_code: COMPUTE_ERROR"

    DecryptionErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Decryption error with error_code: DECRYPTION_ERROR"

    GrantValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Grant validation error with error_code: GRANT_VALIDATION_ERROR"

    OperationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Operation error with error_code: OPERATION_ERROR"

    InternalServerErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          description: "Internal server error with error_code: INTERNAL_SERVER_ERROR"

  parameters:
    OpId:
      name: operation_id
      in: path
      required: true
      schema:
        type: string
      description: The operation ID

# ───────────────────────────────────────────────────────────────────────────
paths:
  /operations:
    post:
      summary: Start an operation (asynchronous)
      description: |
        Creates a new operation with the provided request data and signature.
        
        **Possible Errors:**
        - `400 VALIDATION_ERROR`: Invalid request format or missing required fields
        - `400 VALIDATION_ERROR_PERMISSION_ID`: Invalid or missing permission ID
        - `400 VALIDATION_ERROR_OPERATION_REQUEST_JSON`: Invalid JSON format in operation request
        - `400 GRANT_VALIDATION_ERROR`: Grant validation failed
        - `401 AUTHENTICATION_ERROR`: Invalid signature or unable to recover app address
        - `404 NOT_FOUND_ERROR`: Permission, file, or grant not found
        - `500 BLOCKCHAIN_ERROR`: Blockchain communication failed
        - `500 FILE_ACCESS_ERROR`: Failed to access or download files
        - `500 DECRYPTION_ERROR`: Failed to decrypt file content
        - `500 COMPUTE_ERROR`: Compute operation failed
        - `500 OPERATION_ERROR`: General operation processing error
        - `500 INTERNAL_SERVER_ERROR`: Unexpected server error
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/CreateOperationRequest' }
      responses:
        "202":
          description: Accepted — operation handle returned.
          content:
            application/json:
              schema: { $ref: '#/components/schemas/CreateOperationResponse' }
        "400":
          description: Validation or grant validation error
          content:
            application/json:
              schema: 
                oneOf:
                  - $ref: '#/components/schemas/ValidationErrorResponse'
                  - $ref: '#/components/schemas/GrantValidationErrorResponse'
        "401":
          description: Authentication error (invalid signature)
          content:
            application/json:
              schema: { $ref: '#/components/schemas/AuthenticationErrorResponse' }
        "404":
          description: Resource not found (permission, file, or grant)
          content:
            application/json:
              schema: { $ref: '#/components/schemas/NotFoundErrorResponse' }
        "500":
          description: Server error during operation processing
          content:
            application/json:
              schema: 
                oneOf:
                  - $ref: '#/components/schemas/BlockchainErrorResponse'
                  - $ref: '#/components/schemas/FileAccessErrorResponse'
                  - $ref: '#/components/schemas/DecryptionErrorResponse'
                  - $ref: '#/components/schemas/ComputeErrorResponse'
                  - $ref: '#/components/schemas/OperationErrorResponse'
                  - $ref: '#/components/schemas/InternalServerErrorResponse'

  /operations/{operation_id}:
    parameters: [ { $ref: '#/components/parameters/OpId' } ]

    get:
      summary: Poll operation status / result
      description: |
        Retrieves the current status and result of an operation.
        
        **Possible Errors:**
        - `404 NOT_FOUND_ERROR`: Operation not found
        - `500 COMPUTE_ERROR`: Failed to get prediction status
        - `500 INTERNAL_SERVER_ERROR`: Unexpected server error
      responses:
        "200":
          description: Operation status retrieved successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/GetOperationResponse' }
        "404":
          description: Operation not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/NotFoundErrorResponse' }
        "500":
          description: Server error during status retrieval
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ComputeErrorResponse'
                  - $ref: '#/components/schemas/InternalServerErrorResponse'

  /operations/{operation_id}/cancel:
    parameters: [ { $ref: '#/components/parameters/OpId' } ]
    
    post:
      summary: Cancel a running operation
      description: |
        Cancels a running operation.
        
        **Possible Errors:**
        - `404 NOT_FOUND_ERROR`: Operation not found
        - `500 COMPUTE_ERROR`: Failed to cancel prediction
        - `500 INTERNAL_SERVER_ERROR`: Unexpected server error
      responses:
        "204":
          description: Operation cancelled or already finished
        "404":
          description: Operation not found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/NotFoundErrorResponse' }
        "500":
          description: Server error during cancellation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ComputeErrorResponse'
                  - $ref: '#/components/schemas/InternalServerErrorResponse'

  /identity:
    get:
      summary: Derive deterministic server identity for a user
      description: |
        Derives a deterministic server identity (address and public key) for a user based on their Ethereum address.
        
        **Possible Errors:**
        - `400 VALIDATION_ERROR_USER_ADDRESS`: Invalid user address format
        - `500 OPERATION_ERROR`: Address derivation failed
        - `500 INTERNAL_SERVER_ERROR`: Unexpected server error
      parameters:
        - name: address
          in: query
          required: true
          schema: { $ref: '#/components/schemas/EthereumAddress' }
          description: Caller's wallet address (EIP-55).
      responses:
        "200":
          description: Server identity retrieved successfully
          content:
            application/json:
              schema: { $ref: '#/components/schemas/IdentityResponseModel' }
        "400":
          description: Invalid address format
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ValidationErrorResponse' }
        "500":
          description: Server error during identity derivation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OperationErrorResponse'
                  - $ref: '#/components/schemas/InternalServerErrorResponse'
